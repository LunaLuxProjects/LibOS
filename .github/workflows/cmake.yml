name: CMake

on:
  push:
    branches: [ "Release" ]
  pull_request:
    branches: [ "Release" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Vulkan SDK
        # You may pin to the exact commit or the version.
        # uses: humbletim/install-vulkan-sdk@6aadcb709dbb8e4096dad20e35adaefec83d4b45
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          # official Vulkan SDK release version to use
          version: latest
          # whether to cache the downloaded vulkan_sdk.* installer file (using github actions/cache)
          cache: # optional
          # silence GitHub Annotation notice displayed if resolving `latest` into Vulkan SDK release number
          quiet: # optional

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: 
        git submodule init
        ./vcpkg/bootstrap-vcpkg.sh
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
